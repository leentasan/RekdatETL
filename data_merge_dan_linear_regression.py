# -*- coding: utf-8 -*-
"""Data Merge dan Linear Regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IK1hVW9I2gHYjPInbGrkl2wBUWIqOYZ2
"""

import pandas as pd
import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt

df_cuaca = pd.read_csv('cleaned_data_cuaca.csv')
df_cuaca.head(10)

df_indomie = pd.read_csv('cleaned_data_indomie.csv')
df_indomie.head(10)

# Mengganti nama kolom
df_cuaca.rename(columns={
    'Tavg': 'Temperature',
    'RH_avg': 'Kelembapan',
    'RR': 'Curah Hujan',
    'ff_avg': 'kecepatan angin'
}, inplace=True)

print(df_cuaca.head())

# Mengganti nama kolom
df_indomie.rename(columns={
    'formattedAxisTime': 'Tanggal'
}, inplace=True)

print(df_indomie.head())

# Merge kedua DataFrame berdasarkan kolom 'Tanggal'
merged_df = pd.merge(df_indomie, df_cuaca, on='Tanggal')

# Menampilkan hasil gabungan
print(merged_df)

correlation = merged_df[['value', 'Temperature', 'Kelembapan', 'Curah Hujan', 'kecepatan angin']].corr()
print(correlation)

# Visualisasi menggunakan heatmap
plt.figure(figsize=(8, 6))  # Ukuran gambar
sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt='.2f', linewidths=0.5)

# Menambahkan judul
plt.title('Matriks Korelasi Antar Kolom')

# Menampilkan plot
plt.show()

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

df_cuaca = pd.read_csv('cleaned_data_cuaca.csv')
df_indomie = pd.read_csv('cleaned_data_indomie.csv')

# Memisahkan fitur (X) dan target (y)
X = merged_df[['Temperature', 'Kelembapan', 'Curah Hujan', 'kecepatan angin']]
y = merged_df['value']

# Membagi data menjadi train (80%) dan test (20%)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Membuat model regresi linear
model = LinearRegression()

# Melatih model dengan data training
model.fit(X_train, y_train)
# Membuat prediksi
y_pred = model.predict(X_test)

# Evaluasi model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error (MSE): {mse}")
print(f"R-squared (RÂ²): {r2}")

# Visualisasi hasil prediksi vs nilai sebenarnya
plt.figure(figsize=(8, 6))
plt.scatter(y_test, y_pred, alpha=0.7, color='b')
plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], '--r', linewidth=2)
plt.title('Prediksi vs Nilai Sebenarnya')
plt.xlabel('Nilai Sebenarnya')
plt.ylabel('Prediksi')
plt.show()

# Menampilkan koefisien regresi
coefficients = pd.DataFrame(model.coef_, X.columns, columns=['Koefisien'])
print(coefficients)